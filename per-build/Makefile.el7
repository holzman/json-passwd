SOURCE?='NONE'
VAR_DB = /var/db
AWK = awk
MAKEDB = makedb --quiet
OUTPUT?=$?

default: $(VAR_DB)/passwd.db $(VAR_DB)/group.db

$(VAR_DB)/passwd.db: $(SOURCE)
	@$(AWK) 'BEGIN { FS=":"; OFS=":"; cnt=0 } \
		 /^[ \t]*$$/ { next } \
		 /^[ \t]*#/ { next } \
		 { printf "0%u ", cnt++; print } \
		 /^[^#]/ { printf ".%s ", $$1; print; \
			   printf "=%s ", $$3; print }' $^ | \
	$(MAKEDB) -o $(OUTPUT) -

.PHONY: $(VAR_DB)/group.db

$(VAR_DB)/group.db: $(SOURCE)
	@echo -n "$(patsubst %.db,%,$(@F))... "
	@$(AWK) 'BEGIN { FS=":"; OFS=":" } \
		 /^[ \t]*$$/ { next } \
		 /^[ \t]*#/ { next } \
		 /^[^#]/ { printf ".%s ", $$1; print; \
			   printf "=%s ", $$3; print; \
			   if ($$4 != "") { \
			     split($$4, grmems, ","); \
			     for (memidx in grmems) { \
			       mem=grmems[memidx]; \
			       if (members[mem] == "") \
				 members[mem]=$$3; \
			       else \
				 members[mem]=members[mem] "," $$3; \
			     } \
			     delete grmems; } } \
		 END { for (mem in members) \
			 printf ":%s %s %s\n", mem, mem, members[mem]; }' $^ | \
	$(MAKEDB) -o $(OUTPUT) -
